{
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft.AspNetCore": "Warning"
      }
    }
  },
  "LoggingSinks": {
    "Elasticsearch": {
      "Enabled": "$(envUseElasticsearch ?? false)",
      "Url": "$(envElasticsearchUrl ?? http://localhost:9201)"
    }
  },
  "AllowedHosts": "*",
  "AppInsights": {
    "Enabled": false,
    "ConnectionString": "..."
  },
  "HealthCheckEndpoint": "/health",
  "LivenessCheckEndpoint": "$(HealthCheckEndpoint)/liveness",
  "InContainer": false,
  "IdentityServer": "http://localhost:5005",
  "ClientCredentials": {
    "ClientId": "seelanstyresmvcbfftodownstream",
    "ClientSecret": "mgbNNLCtM237HzTIRMocSFIl463ulNKqJzignzycDdr2ppHXgnU3FD7tDM7VTycy5b566Q8Z0JMHHbVXdClRvw=="
  },
  "Services": {
    "AddressService": {
      "Scheme": "$(envAddressServiceScheme ?? http)",
      "Host": "$(envAddressServiceHost ?? localhost)",
      "Port": "5011"
    },
    "CustomerService": {
      "Scheme": "$(envCustomerServiceScheme ?? http)",
      "Host": "$(envCustomerServiceHost ?? localhost)",
      "Port": "5005"
    },
    "OrderService": {
      "Scheme": "$(envOrderServiceScheme ?? http)",
      "Host": "$(envOrderServiceHost ?? localhost)",
      "Port": "5012"
    },
    "TyresService": {
      "Scheme": "$(envTyresServiceScheme ?? http)",
      "Host": "$(envTyresServiceHost ?? localhost)",
      "Port": "5013"
    }
  },
  "GlobalConfiguration": {
    "BaseUrl": "$(envBaseUrl ?? http://localhost:5050)"
  },
  "Routes": [
    {
      "DownstreamPathTemplate": "/api/customers/{customerId}/addresses",
      "DownstreamScheme": "$(Services:AddressService:Scheme)",
      "DownstreamHostAndPorts": [
        {
          "Host": "$(Services:AddressService:Host)",
          "Port": "$(Services:AddressService:Port)"
        }
      ],
      "UpstreamPathTemplate": "/addressservice/api/customers/{customerId}/addresses",
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "SeelansTyresMvcBffAuthenticationScheme"
      },
      "DelegatingHandlers": [
        "AddressServiceDelegatingHandler"
      ]
    },
    {
      "DownstreamPathTemplate": "/api/customers/{customerId}/addresses/{addressId}",
      "DownstreamScheme": "$(Services:AddressService:Scheme)",
      "DownstreamHostAndPorts": [
        {
          "Host": "$(Services:AddressService:Host)",
          "Port": "$(Services:AddressService:Port)"
        }
      ],
      "UpstreamPathTemplate": "/addressservice/api/customers/{customerId}/addresses/{addressId}",
      "UpstreamHttpMethod": [ "Get", "Put" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "SeelansTyresMvcBffAuthenticationScheme"
      },
      "DelegatingHandlers": [
        "AddressServiceDelegatingHandler"
      ]
    },


    {
      "DownstreamPathTemplate": "/api/customers",
      "DownstreamScheme": "$(Services:CustomerService:Scheme)",
      "DownstreamHostAndPorts": [
        {
          "Host": "$(Services:CustomerService:Host)",
          "Port": "$(Services:CustomerService:Port)"
        }
      ],
      "UpstreamPathTemplate": "/customerservice/api/customers",
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "SeelansTyresMvcBffAuthenticationScheme",
        "AllowedScopes": [
          "CustomerService.createaccount",
          "CustomerService.retrievesinglebyemail"
        ]
      }
    },
    {
      "DownstreamPathTemplate": "/api/customers/{customerId}/resetpassword",
      "DownstreamScheme": "$(Services:CustomerService:Scheme)",
      "DownstreamHostAndPorts": [
        {
          "Host": "$(Services:CustomerService:Host)",
          "Port": "$(Services:CustomerService:Port)"
        }
      ],
      "UpstreamPathTemplate": "/customerservice/api/customers/{customerId}/resetpassword",
      "UpstreamHttpMethod": [ "Put" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "SeelansTyresMvcBffAuthenticationScheme",
        "AllowedScopes": [ "CustomerService.resetpassword" ]
      }
    },
    {
      "DownstreamPathTemplate": "/api/customers/{customerId}",
      "DownstreamScheme": "$(Services:CustomerService:Scheme)",
      "DownstreamHostAndPorts": [
        {
          "Host": "$(Services:CustomerService:Host)",
          "Port": "$(Services:CustomerService:Port)"
        }
      ],
      "UpstreamPathTemplate": "/customerservice/api/customers/{customerId}",
      "UpstreamHttpMethod": [ "Get", "Put", "Delete" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "SeelansTyresMvcBffAuthenticationScheme"
      },
      "DelegatingHandlers": [
        "CustomerServiceFullAccessDelegatingHandler"
      ]
    },
    {
      "DownstreamPathTemplate": "/api/customers/{customerId}/verifypassword",
      "DownstreamScheme": "$(Services:CustomerService:Scheme)",
      "DownstreamHostAndPorts": [
        {
          "Host": "$(Services:CustomerService:Host)",
          "Port": "$(Services:CustomerService:Port)"
        }
      ],
      "UpstreamPathTemplate": "/customerservice/api/customers/{customerId}/verifypassword",
      "UpstreamHttpMethod": [ "Post" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "SeelansTyresMvcBffAuthenticationScheme"
      },
      "DelegatingHandlers": [
        "CustomerServiceFullAccessDelegatingHandler"
      ]
    },


    {
      "DownstreamPathTemplate": "/api/orders",
      "DownstreamScheme": "$(Services:OrderService:Scheme)",
      "DownstreamHostAndPorts": [
        {
          "Host": "$(Services:OrderService:Host)",
          "Port": "$(Services:OrderService:Port)"
        }
      ],
      "UpstreamPathTemplate": "/orderservice/api/orders",
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "SeelansTyresMvcBffAuthenticationScheme"
      },
      "DelegatingHandlers": [
        "OrderServiceDelegatingHandler"
      ]
    },
    {
      "DownstreamPathTemplate": "/api/orders/{orderId}",
      "DownstreamScheme": "$(Services:OrderService:Scheme)",
      "DownstreamHostAndPorts": [
        {
          "Host": "$(Services:OrderService:Host)",
          "Port": "$(Services:OrderService:Port)"
        }
      ],
      "UpstreamPathTemplate": "/orderservice/api/orders/{orderId}",
      "UpstreamHttpMethod": [ "Get", "Put" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "SeelansTyresMvcBffAuthenticationScheme"
      },
      "DelegatingHandlers": [
        "OrderServiceDelegatingHandler"
      ]
    },


    {
      "DownstreamPathTemplate": "/api/brands",
      "DownstreamScheme": "$(Services:TyresService:Scheme)",
      "DownstreamHostAndPorts": [
        {
          "Host": "$(Services:TyresService:Host)",
          "Port": "$(Services:TyresService:Port)"
        }
      ],
      "UpstreamPathTemplate": "/tyresservice/api/brands",
      "UpstreamHttpMethod": [ "Get" ]
    },
    {
      "DownstreamPathTemplate": "/api/tyres",
      "DownstreamScheme": "$(Services:TyresService:Scheme)",
      "DownstreamHostAndPorts": [
        {
          "Host": "$(Services:TyresService:Host)",
          "Port": "$(Services:TyresService:Port)"
        }
      ],
      "UpstreamPathTemplate": "/tyresservice/api/tyres",
      "UpstreamHttpMethod": [ "Get" ]
    },
    {
      "DownstreamPathTemplate": "/api/tyres",
      "DownstreamScheme": "$(Services:TyresService:Scheme)",
      "DownstreamHostAndPorts": [
        {
          "Host": "$(Services:TyresService:Host)",
          "Port": "$(Services:TyresService:Port)"
        }
      ],
      "UpstreamPathTemplate": "/tyresservice/api/tyres",
      "UpstreamHttpMethod": [ "Post" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "SeelansTyresMvcBffAuthenticationScheme"
      },
      "DelegatingHandlers": [
        "TyresServiceDelegatingHandler"
      ]
    },
    {
      "DownstreamPathTemplate": "/api/tyres/{tyreId}",
      "DownstreamScheme": "$(Services:TyresService:Scheme)",
      "DownstreamHostAndPorts": [
        {
          "Host": "$(Services:TyresService:Host)",
          "Port": "$(Services:TyresService:Port)"
        }
      ],
      "UpstreamPathTemplate": "/tyresservice/api/tyres/{tyreId}",
      "UpstreamHttpMethod": [ "Get", "Put" ],
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "SeelansTyresMvcBffAuthenticationScheme"
      },
      "DelegatingHandlers": [
        "TyresServiceDelegatingHandler"
      ]
    }
  ]
}
