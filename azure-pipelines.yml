trigger: 
  tags:
    include:
      - "*"

stages:
- stage: Build
  jobs:
  - job: Build_Solution
    pool: Default
    variables:
      buildConfiguration: 'Release'
      workDir: $(Build.SourcesDirectory)
    steps:
    - template: .pipelines/templates/build-and-scan-solution.yml

    - task: DotNetCoreCLI@2
      displayName: 'Restore dotnet tools'
      inputs:
        command: custom
        custom: tool
        arguments: restore
        workingDirectory: '$(workDir)'

    - task: DotNetCoreCLI@2
      displayName: 'Create EF Core Bundle for SeelansTyres.Services.AddressService'
      inputs:
        command: custom
        custom: tool
        arguments: run dotnet-ef migrations bundle --force --project src/Services/AddressServiceSolution/SeelansTyres.Services.AddressService/SeelansTyres.Services.AddressService.csproj --startup-project src/Services/AddressServiceSolution/SeelansTyres.Services.AddressService/SeelansTyres.Services.AddressService.csproj -o "$(Build.ArtifactStagingDirectory)\SeelansTyresAddressDb.exe"
        workingDirectory: '$(workDir)'

    - task: DotNetCoreCLI@2
      displayName: 'Create EF Core Bundle for SeelansTyres.Services.OrderService'
      inputs:
        command: custom
        custom: tool
        arguments: run dotnet-ef migrations bundle --force --project src/Services/OrderServiceSolution/SeelansTyres.Services.OrderService/SeelansTyres.Services.OrderService.csproj --startup-project src/Services/OrderServiceSolution/SeelansTyres.Services.OrderService/SeelansTyres.Services.OrderService.csproj -o "$(Build.ArtifactStagingDirectory)\SeelansTyresOrderDb.exe"
        workingDirectory: '$(workDir)'

    - task: DotNetCoreCLI@2
      displayName: 'Create EF Core Bundle for SeelansTyres.Services.TyresService'
      inputs:
        command: custom
        custom: tool
        arguments: run dotnet-ef migrations bundle --force --project src/Services/TyresServiceSolution/SeelansTyres.Services.TyresService/SeelansTyres.Services.TyresService.csproj --startup-project src/Services/TyresServiceSolution/SeelansTyres.Services.TyresService/SeelansTyres.Services.TyresService.csproj --context TyresDbContext -o "$(Build.ArtifactStagingDirectory)\SeelansTyresTyresDb.exe"
        workingDirectory: '$(workDir)'

    - template: .pipelines/templates/publish-project.yml
      parameters:
        solutionFolder: Frontends
        solutionSubfolder: HealthChecksUISolution
        project: SeelansTyres.Frontends.HealthChecksUI
        buildImage: true
        imageName: seelanstyres/frontends/healthchecksui

    - template: .pipelines/templates/publish-project.yml
      parameters:
        solutionFolder: Frontends
        solutionSubfolder: MvcSolution
        project: SeelansTyres.Frontends.Mvc
        buildImage: true
        imageName: seelanstyres/frontends/mvc

    - template: .pipelines/templates/publish-project.yml
      parameters:
        solutionFolder: FunctionApps
        solutionSubfolder: SystemDegradedTogglerSolution
        project: SeelansTyres.FunctionApps.SystemDegradedToggler
        uploadZip: true
        runtimeIdentifier: linux-x64

    - template: .pipelines/templates/publish-project.yml
      parameters:
        solutionFolder: Gateways
        solutionSubfolder: MvcBffSolution
        project: SeelansTyres.Gateways.MvcBff
        buildImage: true
        imageName: seelanstyres/gateways/mvcbff

    - template: .pipelines/templates/publish-project.yml
      parameters:
        solutionFolder: Services
        solutionSubfolder: AddressServiceSolution
        project: SeelansTyres.Services.AddressService
        buildImage: true
        imageName: seelanstyres/services/addressservice

    - template: .pipelines/templates/publish-project.yml
      parameters:
        solutionFolder: Services
        solutionSubfolder: AddressServiceSolution
        project: SeelansTyres.Workers.AddressWorker
        buildImage: true
        imageName: seelanstyres/workers/addressworker

    - template: .pipelines/templates/publish-project.yml
      parameters:
        solutionFolder: Services
        solutionSubfolder: IdentityServiceSolution
        project: SeelansTyres.Services.IdentityService
        buildImage: true
        imageName: seelanstyres/services/identityservice

    - template: .pipelines/templates/publish-project.yml
      parameters:
        solutionFolder: Services
        solutionSubfolder: OrderServiceSolution
        project: SeelansTyres.Services.OrderService
        buildImage: true
        imageName: seelanstyres/services/orderservice

    - template: .pipelines/templates/publish-project.yml
      parameters:
        solutionFolder: Services
        solutionSubfolder: OrderServiceSolution
        project: SeelansTyres.Workers.OrderWorker
        buildImage: true
        imageName: seelanstyres/workers/orderworker

    - template: .pipelines/templates/publish-project.yml
      parameters:
        solutionFolder: Services
        solutionSubfolder: TyresServiceSolution
        project: SeelansTyres.Services.TyresService
        buildImage: true
        imageName: seelanstyres/services/tyresservice

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'

    - task: GitHubRelease@1
      displayName: 'Create a New GitHub Release'
      condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
      inputs:
        gitHubConnection: 'ShaylenReddy42_OAuth'
        repositoryName: '$(Build.Repository.Name)'
        action: create
        tagSource: userSpecifiedTag
        tag: $(Build.SourceBranchName)
        title: 'Release v$(Build.SourceBranchName)'
        releaseNotesSource: filePath
        releaseNotesFilePath: '$(Build.SourcesDirectory)/docs/releases/v$(Build.SourceBranchName).md'
        assets: '$(Build.ArtifactStagingDirectory)/*'
        addChangeLog: true
        changeLogCompareToRelease: lastFullRelease
        changeLogType: commitBased
