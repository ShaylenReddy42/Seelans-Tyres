trigger:
- '*'

pool: Default

variables:
  buildConfiguration: 'Release'
  workDir: $(Build.SourcesDirectory)

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK'
  inputs:
    version: 6.0.402
    performMultiLevelLookup: true

- task: CMake@1
  displayName: 'Run CMake'
  inputs:
    cmakeArgs: -S . -B "$(workDir)\build" -DCI_BUILD=ON
    workingDirectory: $(workDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore Solution'
  inputs:
    command: restore
    arguments: -c $(buildConfiguration)
    projects: '$(workDir)/src/SeelansTyres.sln'

- task: SonarCloudPrepare@1
  displayName: 'Prepare SonarCloud for Analysis'
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'shaylenreddy42'
    scannerMode: 'MSBuild'
    projectKey: 'ShaylenReddy42_Seelans-Tyres'
    projectName: 'Seelans-Tyres'
    extraProperties: |
      sonar.exclusions=**/wwwroot/lib/**,**/Migrations/**,**/Templates/**
      sonar.coverage.exclusions=**/wwwroot/lib/**,**/Migrations/**,**/Templates/**

- task: DotNetCoreCLI@2
  displayName: 'Build Solution'
  inputs:
    command: build
    arguments: -c $(buildConfiguration)
    projects: '$(workDir)/src/SeelansTyres.sln'

- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud Analysis'

- task: SonarCloudPublish@1
  displayName: 'Publish SonarCloud Quality Gate Result'
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: 'Restore dotnet tools'
  inputs:
    command: custom
    custom: tool
    arguments: restore
    workingDirectory: '$(workDir)'

- task: DotNetCoreCLI@2
  displayName: 'Create EF Core Bundle for SeelansTyres.Services.AddressService'
  inputs:
    command: custom
    custom: tool
    arguments: run dotnet-ef migrations bundle --force --project src/Services/AddressServiceSolution/SeelansTyres.Services.AddressService/SeelansTyres.Services.AddressService.csproj --startup-project src/Services/AddressServiceSolution/SeelansTyres.Services.AddressService/SeelansTyres.Services.AddressService.csproj -o "$(Build.ArtifactStagingDirectory)\SeelansTyresAddressContext.exe"
    workingDirectory: '$(workDir)'

- task: DotNetCoreCLI@2
  displayName: 'Create EF Core Bundle for SeelansTyres.Services.OrderService'
  inputs:
    command: custom
    custom: tool
    arguments: run dotnet-ef migrations bundle --force --project src/Services/OrderServiceSolution/SeelansTyres.Services.OrderService/SeelansTyres.Services.OrderService.csproj --startup-project src/Services/OrderServiceSolution/SeelansTyres.Services.OrderService/SeelansTyres.Services.OrderService.csproj -o "$(Build.ArtifactStagingDirectory)\SeelansTyresOrderContext.exe"
    workingDirectory: '$(workDir)'

- task: DotNetCoreCLI@2
  displayName: 'Create EF Core Bundle for SeelansTyres.Services.TyresService'
  inputs:
    command: custom
    custom: tool
    arguments: run dotnet-ef migrations bundle --force --project src/Services/TyresServiceSolution/SeelansTyres.Services.TyresService/SeelansTyres.Services.TyresService.csproj --startup-project src/Services/TyresServiceSolution/SeelansTyres.Services.TyresService/SeelansTyres.Services.TyresService.csproj -o "$(Build.ArtifactStagingDirectory)\SeelansTyresTyresContext.exe"
    workingDirectory: '$(workDir)'

- template: .pipelines/templates/publishProject.yml
  parameters:
    buildConfiguration: $(buildConfiguration)
    solutionFolder: Frontends
    solutionSubfolder: HealthChecksUISolution
    project: SeelansTyres.Frontends.HealthChecksUI
    workDir: '$(workDir)'

- template: .pipelines/templates/publishProject.yml
  parameters:
    buildConfiguration: $(buildConfiguration)
    solutionFolder: Frontends
    solutionSubfolder: MvcSolution
    project: SeelansTyres.Frontends.Mvc
    workDir: '$(workDir)'

- template: .pipelines/templates/publishProject.yml
  parameters:
    buildConfiguration: $(buildConfiguration)
    solutionFolder: Gateways
    solutionSubfolder: MvcBffSolution
    project: SeelansTyres.Gateways.MvcBff
    workDir: '$(workDir)'

- template: .pipelines/templates/publishProject.yml
  parameters:
    buildConfiguration: $(buildConfiguration)
    solutionFolder: Services
    solutionSubfolder: AddressServiceSolution
    project: SeelansTyres.Services.AddressService
    workDir: '$(workDir)'

- template: .pipelines/templates/publishProject.yml
  parameters:
    buildConfiguration: $(buildConfiguration)
    solutionFolder: Services
    solutionSubfolder: AddressServiceSolution
    project: SeelansTyres.Workers.AddressWorker
    workDir: '$(workDir)'

- template: .pipelines/templates/publishProject.yml
  parameters:
    buildConfiguration: $(buildConfiguration)
    solutionFolder: Services
    solutionSubfolder: IdentityServiceSolution
    project: SeelansTyres.Services.IdentityService
    workDir: '$(workDir)'

- template: .pipelines/templates/publishProject.yml
  parameters:
    buildConfiguration: $(buildConfiguration)
    solutionFolder: Services
    solutionSubfolder: OrderServiceSolution
    project: SeelansTyres.Services.OrderService
    workDir: '$(workDir)'

- template: .pipelines/templates/publishProject.yml
  parameters:
    buildConfiguration: $(buildConfiguration)
    solutionFolder: Services
    solutionSubfolder: OrderServiceSolution
    project: SeelansTyres.Workers.OrderWorker
    workDir: '$(workDir)'

- template: .pipelines/templates/publishProject.yml
  parameters:
    buildConfiguration: $(buildConfiguration)
    solutionFolder: Services
    solutionSubfolder: TyresServiceSolution
    project: SeelansTyres.Services.TyresService
    workDir: '$(workDir)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs:
    ArtifactName: "Seelan's Tyres"