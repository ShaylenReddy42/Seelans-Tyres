parameters:
- name: buildConfiguration
  type: string
  default: Release

- name: solutionFolder
  type: string

- name: solutionSubfolder
  type: string

- name: project
  type: string

- name: uploadZip
  type: boolean
  default: false

- name: runtimeIdentifier
  type: string
  default: win-x64
  values:
    - win-x64
    - linux-x64

- name: buildImage
  type: boolean
  default: false

- name: imageName
  type: string
  default: ''

- name: workDir
  type: string
  default: $(Build.SourcesDirectory)

steps:
- ${{ if eq(parameters.uploadZip, true) }}:
  - script: dotnet publish -c ${{ parameters.buildConfiguration }} -r ${{ parameters.runtimeIdentifier }} --no-self-contained
    displayName: 'Publish ${{ parameters.project }}'
    workingDirectory: '${{ parameters.workDir }}\src\${{ parameters.solutionFolder }}\${{ parameters.solutionSubfolder }}\${{ parameters.project }}'
    
  - task: ArchiveFiles@2
    displayName: 'Archive ${{ parameters.project }}'
    inputs:
      rootFolderOrFile: '${{ parameters.workDir }}\src\${{ parameters.solutionFolder }}\${{ parameters.solutionSubfolder }}\${{ parameters.project }}\publish'
      includeRootFolder: false
      archiveType: zip
      archiveFile: '$(Build.ArtifactStagingDirectory)\${{ parameters.project }}.zip'

- ${{ if eq(parameters.buildImage, true) }}:
  - task: AzureCLI@2
    displayName: 'Build ${{ parameters.imageName }}:$(getDockerImageTag.dockerImageTag)'
    inputs:
      azureSubscription: 'Azure-Manual-SP'
      scriptType: ps
      scriptLocation: inlineScript
      inlineScript: |
        az acr build -f ".\${{ parameters.solutionFolder }}\${{ parameters.solutionSubfolder }}\${{ parameters.project }}\Dockerfile" -t ${{ parameters.imageName }}:$(getDockerImageTag.dockerImageTag) -r $(containerRegistryProperties.containerRegistryName) .
      workingDirectory: '$(Build.SourcesDirectory)/src'

- ${{ if ne(parameters.solutionFolder, 'FunctionApps') }}:
  - task: CopyFiles@2
    displayName: 'Copy Kubernetes Manifest to drop'
    inputs:
      Contents: '${{ parameters.workDir }}\orchestration\kubernetes\04-deployments\${{ parameters.project }}-configured.yaml'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      flattenFolders: true
