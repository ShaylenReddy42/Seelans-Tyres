version: '3.8'

services:
  seelanstyres-frontends-mvc:
    build:
      context: .
      dockerfile: 'Frontends/SeelansTyres.Frontends.Mvc/Dockerfile'
    container_name: 'seelanstyresfrontendsmvc'
    image: 'seelanstyresfrontendsmvc:${TAG}'
    ports:
      - 5001:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - EmailCredentials__Email=${EmailCredentials__Email}
      - EmailCredentials__Password=${EmailCredentials__Password}
      - envIdentityServerUrl=http://{HOST}:5005
      - envMvcBffUrl=http://${HOST}:5050
      - envUseElasticsearch=true
      - envElasticsearchUrl=${ELASTICSEARCH}
      - UseDocker=true
    restart: always
    networks:
      - seelanstyres-network

  seelanstyres-gateways-mvcbff:
    build:
      context: .
      dockerfile: 'Gateways/SeelansTyres.Gateways.MvcBff/Dockerfile'
    container_name: 'seelanstyresgatewaysmvcbff'
    image: 'seelanstyresgatewaysmvcbff:${TAG}'
    ports:
      - 5050:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - envAddressServiceHost=${HOST}
      - envCustomerServiceHost=${HOST}
      - envOrderServiceHost=${HOST}
      - envTyresServiceHost=${HOST}
      - envBaseUrl=http://${HOST}:5050
      - envIdentityServerUrl=http://${HOST}:5005
      - envUseElasticsearch=true
      - envElasticsearchUrl=${ELASTICSEARCH}
      - UseDocker=true
    restart: always
    networks:
      - seelanstyres-network

  seelanstyres-services-addressservice:
    build:
      context: .
      dockerfile: 'Services/SeelansTyres.Services.AddressService/Dockerfile'
    container_name: 'seelanstyresservicesaddressservice'
    image: 'seelanstyresservicesaddressservice:${TAG}'
    ports:
      - 5011:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - SeelansTyresAddressContext=${CONTEXT}
      - envUseElasticsearch=true
      - envElasticsearchUrl=${ELASTICSEARCH}
      - envTokenIssuer=http://${HOST}:5005
      - UseDocker=true
    depends_on:
      - sqlserver
    restart: always
    networks:
      - seelanstyres-network

  seelanstyres-services-identityservice:
    build:
      context: .
      dockerfile: 'Services/SeelansTyres.Services.IdentityService/Dockerfile'
    container_name: 'seelanstyresservicesidentityservice'
    image: 'seelanstyresservicesidentityservice:${TAG}'
    ports:
      - 5005:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AdminCredentials__Email=${AdminCredentials__Email}
      - AdminCredentials__Password=${AdminCredentials__Password}
      - SeelansTyresIdentityContext=${CONTEXT}
      - envUseElasticsearch=true
      - envElasticsearchUrl=${ELASTICSEARCH}
      - envBaseUrl=http://${HOST}:5005
      - envSeelansTyresMvcClientUrl=http://${HOST}:5001
      - UseDocker=true
    depends_on:
      - sqlserver
    restart: always
    networks:
      - seelanstyres-network

  seelanstyres-services-orderservice:
    build:
      context: .
      dockerfile: 'Services/SeelansTyres.Services.OrderService/Dockerfile'
    container_name: 'seelanstyresservicesorderservice'
    image: 'seelanstyresservicesorderservice:${TAG}'
    ports:
      - 5012:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - SeelansTyresOrderContext=${CONTEXT}
      - envTokenIssuer=http://${HOST}:5005
      - envUseElasticsearch=true
      - envElasticsearchUrl=${ELASTICSEARCH}
      - UseDocker=true
    depends_on:
      - sqlserver
    restart: always
    networks:
      - seelanstyres-network

  seelanstyres-services-tyresservice:
    build:
      context: .
      dockerfile: 'Services/SeelansTyres.Services.TyresService/Dockerfile'
    container_name: 'seelanstyresservicestyresservice'
    image: 'seelanstyresservicestyresservice:${TAG}'
    ports:
      - 5013:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - SeelansTyresTyresContext=${CONTEXT}
      - envTokenIssuer=http://${HOST}:5005
      - envUseElasticsearch=true
      - envElasticsearchUrl=${ELASTICSEARCH}
      - UseDocker=true
    depends_on:
      - sqlserver
    restart: always
    networks:
      - seelanstyres-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    expose:
      - 1433
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=P@55w0rd1234
    volumes:
      - ./docker/mssql/data:/var/opt/mssql/data
      - ./docker/mssql/log:/var/opt/mssql/log
      - ./docker/mssql/secrets:/var/opt/mssql/secrets
    restart: always
    networks:
      - seelanstyres-network

  elasticsearch:
    image: elasticsearch:7.17.6
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - node.name=elasticsearch
      - cluster.name=seelanstyres-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
        memlock:
          soft: -1
          hard: -1
    volumes:
      - ./docker/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - seelanstyres-network

  kibana:
    image: kibana:7.17.6
    container_name: kibana
    ports:
      - 5601:5601
    restart: always
    networks:
      - seelanstyres-network

networks:
  seelanstyres-network:
    driver: bridge
    name: seelanstyres-network